name: Build and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Install Package
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev
        
    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.0

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target screamdeck

    - name: Upload Built Package
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }} package
        path: |
          include/*.h
          **/*.dll
          **/*.dylib
          **/*.so
              
  package:
    name: Package
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set Variables
        id: vars
        run: echo "::set-output name=sha_short::$(${GITHUB_SHA::7})"
    
      - name: Download All Packages
        uses: actions/download-artifact@v2
          
      - name: Delete Package Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            windows-latest package
            macOS-latest package
            ubuntu-latest package
      
      - name: Copy To Staging Directory
        run: |
          sudo mkdir -p package/screamdeck
          sudo rsync -avhu "windows-latest package/" package/screamdeck
          sudo rsync -avhu "macOS-latest package/" package/screamdeck
          sudo rsync -avhu "ubuntu-latest package/" package/screamdeck
          
      - name: Upload Combined Packages
        uses: actions/upload-artifact@v2
        with:
          name: screamdeck_${{github.ref_name}}_${{steps.vars.outputs.sha_short}}
          path: package
